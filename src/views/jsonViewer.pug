html
    head
        title JSON Viewer | #{name}
        style.
            html, body {
                margin: 0;
                padding: 0;
            }
            #container {
                height: calc(100vh - 56px);
                overflow: hidden;
                background-color: #1e1e1e;
                color: white;
                font-size: 20px;
            }
            
        link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@latest/dist/css/bootstrap.min.css")
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@latest/dist/js/bootstrap.bundle.min.js") 
        script(src='https://unpkg.com/monaco-editor@latest/min/vs/loader.js')

    body 
        nav.navbar.navbar-expand-lg.navbar-dark.bg-dark
            .container-fluid
                .navbar-brand JSON Viewer -  
                    a(href="/" + name) #{name}
                .d-flex
                    button.btn.btn-secondary.me-2(type='button') Login
                    button#remix-btn.btn.btn-primary(type='button') Remix!

        div#container Loading Editor...
        script.
            require.config({ paths: { 'vs': 'https://unpkg.com/monaco-editor@latest/min/vs' }});
            require(["vs/editor/editor.main"], function () {
                fetch("/#{name}").then(response => response.json()).then(data => {
                    let container = document.getElementById("container");
                    let options = {
                        automaticLayout: true,
                        glyphMargin: true,
                        lineNumbers: true,
                        theme: "vs-dark",
                        language: "json",
                        value: JSON.stringify(data, null, 4),
                    };
                    container.innerHTML = "";
                    window.editor = monaco.editor.create(container, options);
                });
            });
        script.
            document.getElementById("remix-btn").addEventListener("click", function() {
                if(!window.editor) return
                let data = window.editor.getValue()
                fetch("/api/bin", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: data
                })
                .then(response => response.json())
                .then(data => {
                    if(!data.error) {
                        window.location.href = "/" + data.name + "/view"
                    } else {
                        alert(data.message)
                    }
                })
            })
